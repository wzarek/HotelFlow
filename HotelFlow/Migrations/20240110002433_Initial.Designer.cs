// <auto-generated />
using System;
using HotelFlow.Models.DTO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelFlow.Migrations
{
    [DbContext(typeof(HotelFlowContext))]
    [Migration("20240110002433_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelFlow.Models.DTO.CleaningHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCleaned")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.ToTable("CleaningHistory", "Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.CleaningSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateToBeCleaned")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.ToTable("CleaningSchedule", "Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.FloorSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FloorNumber" }, "UQ__FloorSch__632D9B2BEB59EC8A")
                        .IsUnique();

                    b.ToTable("FloorSchema", "Visuals");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Hotel", "Base");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ObjectPlacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("FloorNumberId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PositionFrom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PositionTo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FloorNumberId");

                    b.HasIndex("ObjectTypeId");

                    b.HasIndex("RoomId");

                    b.ToTable("ObjectPlacement", "Visuals");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ObjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ObjectType", "Visuals");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.HasIndex("StatusId");

                    b.ToTable("Reservation", "Business");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatus", "Business");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Review", "Business");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role", "Users");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Room", "Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.RoomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("RoomStatus", "Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomType", "Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "Users");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.CleaningHistory", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.User", "Employee")
                        .WithMany("CleaningHistories")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__CleaningH__Emplo__571DF1D5");

                    b.HasOne("HotelFlow.Models.DTO.Room", "Room")
                        .WithMany("CleaningHistories")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__CleaningH__RoomI__5629CD9C");

                    b.Navigation("Employee");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.CleaningSchedule", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.User", "Employee")
                        .WithMany("CleaningSchedules")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__CleaningS__Emplo__5535A963");

                    b.HasOne("HotelFlow.Models.DTO.Room", "Room")
                        .WithMany("CleaningSchedules")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__CleaningS__RoomI__5441852A");

                    b.Navigation("Employee");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ObjectPlacement", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.FloorSchema", "FloorNumber")
                        .WithMany("ObjectPlacements")
                        .HasForeignKey("FloorNumberId")
                        .IsRequired()
                        .HasConstraintName("FK__ObjectPla__Floor__5DCAEF64");

                    b.HasOne("HotelFlow.Models.DTO.ObjectType", "ObjectType")
                        .WithMany("ObjectPlacements")
                        .HasForeignKey("ObjectTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__ObjectPla__Objec__5CD6CB2B");

                    b.HasOne("HotelFlow.Models.DTO.Room", "Room")
                        .WithMany("ObjectPlacements")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__ObjectPla__RoomI__5EBF139D");

                    b.Navigation("FloorNumber");

                    b.Navigation("ObjectType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Reservation", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.User", "Customer")
                        .WithMany("ReservationCustomers")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Custo__5812160E");

                    b.HasOne("HotelFlow.Models.DTO.User", "Employee")
                        .WithMany("ReservationEmployees")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Emplo__59063A47");

                    b.HasOne("HotelFlow.Models.DTO.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__RoomI__59FA5E80");

                    b.HasOne("HotelFlow.Models.DTO.ReservationStatus", "Status")
                        .WithMany("Reservations")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Statu__5AEE82B9");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Room");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Review", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.Reservation", "Reservation")
                        .WithMany("Reviews")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Reservat__5BE2A6F2");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Room", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.RoomStatus", "Status")
                        .WithMany("Rooms")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Room__StatusId__534D60F1");

                    b.HasOne("HotelFlow.Models.DTO.RoomType", "Type")
                        .WithMany("Rooms")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Room__TypeId__52593CB8");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.User", b =>
                {
                    b.HasOne("HotelFlow.Models.DTO.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__RoleId__5165187F");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.FloorSchema", b =>
                {
                    b.Navigation("ObjectPlacements");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ObjectType", b =>
                {
                    b.Navigation("ObjectPlacements");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Reservation", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.ReservationStatus", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.Room", b =>
                {
                    b.Navigation("CleaningHistories");

                    b.Navigation("CleaningSchedules");

                    b.Navigation("ObjectPlacements");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.RoomStatus", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelFlow.Models.DTO.User", b =>
                {
                    b.Navigation("CleaningHistories");

                    b.Navigation("CleaningSchedules");

                    b.Navigation("ReservationCustomers");

                    b.Navigation("ReservationEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
